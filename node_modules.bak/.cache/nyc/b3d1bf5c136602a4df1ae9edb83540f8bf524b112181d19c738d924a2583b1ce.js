var cov_b9bhfyc0p=function(){var path="/Users/dmiller/recurly/v3/clients/node/lib/recurly/Caster.js";var hash="f3b541cf9275c3c1224eca651864253e68003c70";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/dmiller/recurly/v3/clients/node/lib/recurly/Caster.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:32}},"1":{start:{line:2,column:15},end:{line:2,column:42}},"2":{start:{line:15,column:16},end:{line:15,column:45}},"3":{start:{line:16,column:2},end:{line:16,column:34}},"4":{start:{line:31,column:2},end:{line:37,column:3}},"5":{start:{line:32,column:4},end:{line:32,column:20}},"6":{start:{line:33,column:4},end:{line:33,column:18}},"7":{start:{line:35,column:4},end:{line:35,column:31}},"8":{start:{line:36,column:4},end:{line:36,column:44}},"9":{start:{line:39,column:16},end:{line:39,column:43}},"10":{start:{line:40,column:2},end:{line:40,column:30}},"11":{start:{line:52,column:17},end:{line:52,column:19}},"12":{start:{line:53,column:2},end:{line:77,column:3}},"13":{start:{line:54,column:18},end:{line:54,column:26}},"14":{start:{line:55,column:19},end:{line:55,column:38}},"15":{start:{line:58,column:4},end:{line:76,column:5}},"16":{start:{line:59,column:6},end:{line:59,column:27}},"17":{start:{line:60,column:11},end:{line:76,column:5}},"18":{start:{line:62,column:6},end:{line:67,column:7}},"19":{start:{line:63,column:8},end:{line:63,column:47}},"20":{start:{line:66,column:8},end:{line:66,column:30}},"21":{start:{line:69,column:6},end:{line:75,column:7}},"22":{start:{line:70,column:8},end:{line:70,column:44}},"23":{start:{line:71,column:13},end:{line:75,column:7}},"24":{start:{line:72,column:8},end:{line:72,column:43}},"25":{start:{line:74,column:8},end:{line:74,column:30}},"26":{start:{line:78,column:2},end:{line:78,column:15}},"27":{start:{line:81,column:0},end:{line:81,column:50}},"28":{start:{line:82,column:0},end:{line:82,column:50}},"29":{start:{line:83,column:0},end:{line:83,column:40}}},fnMap:{"0":{name:"castFileResponse",decl:{start:{line:14,column:9},end:{line:14,column:25}},loc:{start:{line:14,column:32},end:{line:17,column:1}},line:14},"1":{name:"castJsonResponse",decl:{start:{line:29,column:9},end:{line:29,column:25}},loc:{start:{line:29,column:32},end:{line:41,column:1}},line:29},"2":{name:"castRequest",decl:{start:{line:51,column:9},end:{line:51,column:20}},loc:{start:{line:51,column:27},end:{line:79,column:1}},line:51}},branchMap:{"0":{loc:{start:{line:31,column:2},end:{line:37,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:37,column:3}},{start:{line:31,column:2},end:{line:37,column:3}}],line:31},"1":{loc:{start:{line:31,column:6},end:{line:31,column:39}},type:"binary-expr",locations:[{start:{line:31,column:6},end:{line:31,column:18}},{start:{line:31,column:22},end:{line:31,column:39}}],line:31},"2":{loc:{start:{line:58,column:4},end:{line:76,column:5}},type:"if",locations:[{start:{line:58,column:4},end:{line:76,column:5}},{start:{line:58,column:4},end:{line:76,column:5}}],line:58},"3":{loc:{start:{line:58,column:8},end:{line:58,column:45}},type:"binary-expr",locations:[{start:{line:58,column:8},end:{line:58,column:22}},{start:{line:58,column:26},end:{line:58,column:45}}],line:58},"4":{loc:{start:{line:60,column:11},end:{line:76,column:5}},type:"if",locations:[{start:{line:60,column:11},end:{line:76,column:5}},{start:{line:60,column:11},end:{line:76,column:5}}],line:60},"5":{loc:{start:{line:60,column:15},end:{line:60,column:55}},type:"binary-expr",locations:[{start:{line:60,column:15},end:{line:60,column:35}},{start:{line:60,column:39},end:{line:60,column:55}}],line:60},"6":{loc:{start:{line:62,column:6},end:{line:67,column:7}},type:"if",locations:[{start:{line:62,column:6},end:{line:67,column:7}},{start:{line:62,column:6},end:{line:67,column:7}}],line:62},"7":{loc:{start:{line:69,column:6},end:{line:75,column:7}},type:"if",locations:[{start:{line:69,column:6},end:{line:75,column:7}},{start:{line:69,column:6},end:{line:75,column:7}}],line:69},"8":{loc:{start:{line:71,column:13},end:{line:75,column:7}},type:"if",locations:[{start:{line:71,column:13},end:{line:75,column:7}},{start:{line:71,column:13},end:{line:75,column:7}}],line:71},"9":{loc:{start:{line:71,column:17},end:{line:71,column:67}},type:"binary-expr",locations:[{start:{line:71,column:17},end:{line:71,column:42}},{start:{line:71,column:46},end:{line:71,column:67}}],line:71}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"f3b541cf9275c3c1224eca651864253e68003c70"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const utils=(cov_b9bhfyc0p.s[0]++,require('./utils'));const Schema=(cov_b9bhfyc0p.s[1]++,require('./schemas').Schema);/**
 * Turns a plain javascript object into Recurly domain objects.
 * This involves camelizing the snake-cased keys and converting the
 * untyped objects into typed objects. It also casts special types
 * like datetimes.
 *
 * @private
 * @param {Object} obj - The plain js object to cast to Recurly object
 * @return {Resource}
 */function castFileResponse(obj){cov_b9bhfyc0p.f[0]++;const Klass=(cov_b9bhfyc0p.s[2]++,Schema.locateResource('File'));cov_b9bhfyc0p.s[3]++;return Klass.cast({data:obj});}/**
 * Turns a plain javascript object into Recurly domain objects.
 * This involves camelizing the snake-cased keys and converting the
 * untyped objects into typed objects. It also casts special types
 * like datetimes.
 *
 * @private
 * @param {Object} obj - The plain js object to cast to Recurly object
 * @return {Resource}
 */function castJsonResponse(obj){cov_b9bhfyc0p.f[1]++;let name,parsedObj;cov_b9bhfyc0p.s[4]++;if((cov_b9bhfyc0p.b[1][0]++,obj===null)||(cov_b9bhfyc0p.b[1][1]++,obj===undefined)){cov_b9bhfyc0p.b[0][0]++;cov_b9bhfyc0p.s[5]++;parsedObj=null;cov_b9bhfyc0p.s[6]++;name='Empty';}else{cov_b9bhfyc0p.b[0][1]++;cov_b9bhfyc0p.s[7]++;parsedObj=JSON.parse(obj);cov_b9bhfyc0p.s[8]++;name=utils.className(parsedObj.object);}const Klass=(cov_b9bhfyc0p.s[9]++,Schema.locateResource(name));cov_b9bhfyc0p.s[10]++;return Klass.cast(parsedObj);}/**
 * Turns a plain javascript object into Recurly request.
 * This involves snakeifying the camel-cased keys.
 *
 * @private
 * @param {Object} obj - The plain js object to cast to Recurly request
 * @return {Object}
 */function castRequest(obj){cov_b9bhfyc0p.f[2]++;const newObj=(cov_b9bhfyc0p.s[11]++,{});cov_b9bhfyc0p.s[12]++;for(let key in obj){const value=(cov_b9bhfyc0p.s[13]++,obj[key]);const newKey=(cov_b9bhfyc0p.s[14]++,utils.snakeify(key));// the order of these conditionals are important
cov_b9bhfyc0p.s[15]++;if((cov_b9bhfyc0p.b[3][0]++,value===null)||(cov_b9bhfyc0p.b[3][1]++,value===undefined)){cov_b9bhfyc0p.b[2][0]++;cov_b9bhfyc0p.s[16]++;newObj[newKey]=null;}else{cov_b9bhfyc0p.b[2][1]++;cov_b9bhfyc0p.s[17]++;if((cov_b9bhfyc0p.b[5][0]++,Array.isArray(value))&&(cov_b9bhfyc0p.b[5][1]++,value.length>0)){cov_b9bhfyc0p.b[4][0]++;cov_b9bhfyc0p.s[18]++;// If they are not primitives, recursively cast
if(typeof value[0]==='object'){cov_b9bhfyc0p.b[6][0]++;cov_b9bhfyc0p.s[19]++;newObj[newKey]=value.map(castRequest);// else pass along the unaltered array of primitives
}else{cov_b9bhfyc0p.b[6][1]++;cov_b9bhfyc0p.s[20]++;newObj[newKey]=value;}}else{cov_b9bhfyc0p.b[4][1]++;cov_b9bhfyc0p.s[21]++;if(value instanceof Date){cov_b9bhfyc0p.b[7][0]++;cov_b9bhfyc0p.s[22]++;newObj[newKey]=value.toISOString();}else{cov_b9bhfyc0p.b[7][1]++;cov_b9bhfyc0p.s[23]++;if((cov_b9bhfyc0p.b[9][0]++,typeof value==='object')&&(cov_b9bhfyc0p.b[9][1]++,!Array.isArray(value))){cov_b9bhfyc0p.b[8][0]++;cov_b9bhfyc0p.s[24]++;newObj[newKey]=castRequest(value);}else{cov_b9bhfyc0p.b[8][1]++;cov_b9bhfyc0p.s[25]++;newObj[newKey]=value;}}}}}cov_b9bhfyc0p.s[26]++;return newObj;}cov_b9bhfyc0p.s[27]++;module.exports.castFileResponse=castFileResponse;cov_b9bhfyc0p.s[28]++;module.exports.castJsonResponse=castJsonResponse;cov_b9bhfyc0p.s[29]++;module.exports.castRequest=castRequest;