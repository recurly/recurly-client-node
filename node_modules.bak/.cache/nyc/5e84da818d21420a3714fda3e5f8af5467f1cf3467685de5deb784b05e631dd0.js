var cov_1gwwuilor1=function(){var path="/Users/dmiller/recurly/v3/clients/node/lib/recurly/Page.js";var hash="09b2e193894b4b3bad4294869e56173bd9e3f782";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/dmiller/recurly/v3/clients/node/lib/recurly/Page.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:38}},"1":{start:{line:2,column:15},end:{line:2,column:42}},"2":{start:{line:3,column:14},end:{line:3,column:32}},"3":{start:{line:7,column:4},end:{line:12,column:5}},"4":{start:{line:19,column:16},end:{line:19,column:48}},"5":{start:{line:20,column:4},end:{line:24,column:5}},"6":{start:{line:21,column:19},end:{line:21,column:54}},"7":{start:{line:22,column:20},end:{line:22,column:47}},"8":{start:{line:23,column:6},end:{line:23,column:49}},"9":{start:{line:23,column:35},end:{line:23,column:48}},"10":{start:{line:25,column:4},end:{line:25,column:14}},"11":{start:{line:29,column:0},end:{line:29,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:2},end:{line:6,column:3}},loc:{start:{line:6,column:22},end:{line:13,column:3}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:2},end:{line:18,column:3}},loc:{start:{line:18,column:18},end:{line:26,column:3}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:30},end:{line:23,column:31}},loc:{start:{line:23,column:35},end:{line:23,column:48}},line:23}},branchMap:{"0":{loc:{start:{line:20,column:4},end:{line:24,column:5}},type:"if",locations:[{start:{line:20,column:4},end:{line:24,column:5}},{start:{line:20,column:4},end:{line:24,column:5}}],line:20},"1":{loc:{start:{line:20,column:8},end:{line:20,column:39}},type:"binary-expr",locations:[{start:{line:20,column:8},end:{line:20,column:16}},{start:{line:20,column:20},end:{line:20,column:39}}],line:20}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"09b2e193894b4b3bad4294869e56173bd9e3f782"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Resource=(cov_1gwwuilor1.s[0]++,require('./Resource'));const Schema=(cov_1gwwuilor1.s[1]++,require('./schemas').Schema);const utils=(cov_1gwwuilor1.s[2]++,require('./utils'));class Page extends Resource{static getSchema(){cov_1gwwuilor1.f[0]++;cov_1gwwuilor1.s[3]++;return{object:String,hasMore:Boolean,next:String,data:Array};}// This is overridden because we need to
// cast the objects in `data` depending on
// what type they say they are in `object`
static cast(v){cov_1gwwuilor1.f[1]++;const obj=(cov_1gwwuilor1.s[4]++,this.getCompiledSchema().cast(v));cov_1gwwuilor1.s[5]++;if((cov_1gwwuilor1.b[1][0]++,obj.data)&&(cov_1gwwuilor1.b[1][1]++,obj.data.length>0)){cov_1gwwuilor1.b[0][0]++;const name=(cov_1gwwuilor1.s[6]++,utils.className(obj.data[0].object));const Klass=(cov_1gwwuilor1.s[7]++,Schema.locateResource(name));cov_1gwwuilor1.s[8]++;obj.data=obj.data.map(d=>{cov_1gwwuilor1.f[2]++;cov_1gwwuilor1.s[9]++;return Klass.cast(d);});}else{cov_1gwwuilor1.b[0][1]++;}cov_1gwwuilor1.s[10]++;return obj;}}cov_1gwwuilor1.s[11]++;module.exports=Page;