var cov_1h8owsa8m6=function(){var path="/app/clients/node/lib/recurly/Caster.js";var hash="6a82814005eee43363966362e3d608f3b629caab";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/app/clients/node/lib/recurly/Caster.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:32}},"1":{start:{line:2,column:15},end:{line:2,column:42}},"2":{start:{line:16,column:2},end:{line:20,column:3}},"3":{start:{line:17,column:4},end:{line:17,column:18}},"4":{start:{line:19,column:4},end:{line:19,column:38}},"5":{start:{line:22,column:16},end:{line:22,column:43}},"6":{start:{line:23,column:2},end:{line:23,column:24}},"7":{start:{line:35,column:17},end:{line:35,column:19}},"8":{start:{line:36,column:2},end:{line:60,column:3}},"9":{start:{line:37,column:18},end:{line:37,column:26}},"10":{start:{line:38,column:19},end:{line:38,column:38}},"11":{start:{line:41,column:4},end:{line:59,column:5}},"12":{start:{line:42,column:6},end:{line:42,column:27}},"13":{start:{line:43,column:11},end:{line:59,column:5}},"14":{start:{line:45,column:6},end:{line:50,column:7}},"15":{start:{line:46,column:8},end:{line:46,column:47}},"16":{start:{line:49,column:8},end:{line:49,column:30}},"17":{start:{line:52,column:6},end:{line:58,column:7}},"18":{start:{line:53,column:8},end:{line:53,column:44}},"19":{start:{line:54,column:13},end:{line:58,column:7}},"20":{start:{line:55,column:8},end:{line:55,column:43}},"21":{start:{line:57,column:8},end:{line:57,column:30}},"22":{start:{line:61,column:2},end:{line:61,column:15}},"23":{start:{line:64,column:0},end:{line:64,column:42}},"24":{start:{line:65,column:0},end:{line:65,column:40}}},fnMap:{"0":{name:"castResponse",decl:{start:{line:14,column:9},end:{line:14,column:21}},loc:{start:{line:14,column:28},end:{line:24,column:1}},line:14},"1":{name:"castRequest",decl:{start:{line:34,column:9},end:{line:34,column:20}},loc:{start:{line:34,column:27},end:{line:62,column:1}},line:34}},branchMap:{"0":{loc:{start:{line:16,column:2},end:{line:20,column:3}},type:"if",locations:[{start:{line:16,column:2},end:{line:20,column:3}},{start:{line:16,column:2},end:{line:20,column:3}}],line:16},"1":{loc:{start:{line:16,column:6},end:{line:16,column:39}},type:"binary-expr",locations:[{start:{line:16,column:6},end:{line:16,column:18}},{start:{line:16,column:22},end:{line:16,column:39}}],line:16},"2":{loc:{start:{line:41,column:4},end:{line:59,column:5}},type:"if",locations:[{start:{line:41,column:4},end:{line:59,column:5}},{start:{line:41,column:4},end:{line:59,column:5}}],line:41},"3":{loc:{start:{line:41,column:8},end:{line:41,column:45}},type:"binary-expr",locations:[{start:{line:41,column:8},end:{line:41,column:22}},{start:{line:41,column:26},end:{line:41,column:45}}],line:41},"4":{loc:{start:{line:43,column:11},end:{line:59,column:5}},type:"if",locations:[{start:{line:43,column:11},end:{line:59,column:5}},{start:{line:43,column:11},end:{line:59,column:5}}],line:43},"5":{loc:{start:{line:43,column:15},end:{line:43,column:55}},type:"binary-expr",locations:[{start:{line:43,column:15},end:{line:43,column:35}},{start:{line:43,column:39},end:{line:43,column:55}}],line:43},"6":{loc:{start:{line:45,column:6},end:{line:50,column:7}},type:"if",locations:[{start:{line:45,column:6},end:{line:50,column:7}},{start:{line:45,column:6},end:{line:50,column:7}}],line:45},"7":{loc:{start:{line:52,column:6},end:{line:58,column:7}},type:"if",locations:[{start:{line:52,column:6},end:{line:58,column:7}},{start:{line:52,column:6},end:{line:58,column:7}}],line:52},"8":{loc:{start:{line:54,column:13},end:{line:58,column:7}},type:"if",locations:[{start:{line:54,column:13},end:{line:58,column:7}},{start:{line:54,column:13},end:{line:58,column:7}}],line:54},"9":{loc:{start:{line:54,column:17},end:{line:54,column:67}},type:"binary-expr",locations:[{start:{line:54,column:17},end:{line:54,column:42}},{start:{line:54,column:46},end:{line:54,column:67}}],line:54}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"6a82814005eee43363966362e3d608f3b629caab"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const utils=(cov_1h8owsa8m6.s[0]++,require('./utils'));const Schema=(cov_1h8owsa8m6.s[1]++,require('./schemas').Schema);/**
 * Turns a plain javascript object into Recurly domain objects.
 * This involves camelizing the snake-cased keys and converting the
 * untyped objects into typed objects. It also casts special types
 * like datetimes.
 *
 * @private
 * @param {Object} obj - The plain js object to cast to Recurly object
 * @return {Resource}
 */function castResponse(obj){cov_1h8owsa8m6.f[0]++;let name;cov_1h8owsa8m6.s[2]++;if((cov_1h8owsa8m6.b[1][0]++,obj===null)||(cov_1h8owsa8m6.b[1][1]++,obj===undefined)){cov_1h8owsa8m6.b[0][0]++;cov_1h8owsa8m6.s[3]++;name='Empty';}else{cov_1h8owsa8m6.b[0][1]++;cov_1h8owsa8m6.s[4]++;name=utils.className(obj.object);}const Klass=(cov_1h8owsa8m6.s[5]++,Schema.locateResource(name));cov_1h8owsa8m6.s[6]++;return Klass.cast(obj);}/**
 * Turns a plain javascript object into Recurly request.
 * This involves snakeifying the camel-cased keys.
 *
 * @private
 * @param {Object} obj - The plain js object to cast to Recurly request
 * @return {Object}
 */function castRequest(obj){cov_1h8owsa8m6.f[1]++;const newObj=(cov_1h8owsa8m6.s[7]++,{});cov_1h8owsa8m6.s[8]++;for(let key in obj){const value=(cov_1h8owsa8m6.s[9]++,obj[key]);const newKey=(cov_1h8owsa8m6.s[10]++,utils.snakeify(key));// the order of these conditionals are important
cov_1h8owsa8m6.s[11]++;if((cov_1h8owsa8m6.b[3][0]++,value===null)||(cov_1h8owsa8m6.b[3][1]++,value===undefined)){cov_1h8owsa8m6.b[2][0]++;cov_1h8owsa8m6.s[12]++;newObj[newKey]=null;}else{cov_1h8owsa8m6.b[2][1]++;cov_1h8owsa8m6.s[13]++;if((cov_1h8owsa8m6.b[5][0]++,Array.isArray(value))&&(cov_1h8owsa8m6.b[5][1]++,value.length>0)){cov_1h8owsa8m6.b[4][0]++;cov_1h8owsa8m6.s[14]++;// If they are not primitives, recursively cast
if(typeof value[0]==='object'){cov_1h8owsa8m6.b[6][0]++;cov_1h8owsa8m6.s[15]++;newObj[newKey]=value.map(castRequest);// else pass along the unaltered array of primitives
}else{cov_1h8owsa8m6.b[6][1]++;cov_1h8owsa8m6.s[16]++;newObj[newKey]=value;}}else{cov_1h8owsa8m6.b[4][1]++;cov_1h8owsa8m6.s[17]++;if(value instanceof Date){cov_1h8owsa8m6.b[7][0]++;cov_1h8owsa8m6.s[18]++;newObj[newKey]=value.toISOString();}else{cov_1h8owsa8m6.b[7][1]++;cov_1h8owsa8m6.s[19]++;if((cov_1h8owsa8m6.b[9][0]++,typeof value==='object')&&(cov_1h8owsa8m6.b[9][1]++,!Array.isArray(value))){cov_1h8owsa8m6.b[8][0]++;cov_1h8owsa8m6.s[20]++;newObj[newKey]=castRequest(value);}else{cov_1h8owsa8m6.b[8][1]++;cov_1h8owsa8m6.s[21]++;newObj[newKey]=value;}}}}}cov_1h8owsa8m6.s[22]++;return newObj;}cov_1h8owsa8m6.s[23]++;module.exports.castResponse=castResponse;cov_1h8owsa8m6.s[24]++;module.exports.castRequest=castRequest;